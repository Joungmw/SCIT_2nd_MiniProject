[git hub]
오픈소스 발표 시작하겠습니다.

[wiki]
[Main function]
저희의 주요기능입니다.
저희는 C로 작성된 데이터 압축 라이브러리인 zlib을 기반으로 
만들어진 코드에 기능들을 추가해 보았습니다.
추가한 기능은
 압축을 한뒤 원본 파일을 삭제 하는 기능과
 디렉토리를 압축할 경우 디렉토리와 내부에 있는 파일들을 모두 삭제하는 기능
 압축을 하는 파일이 일정한 용량보다 크면 원본 파일을 삭제해 주는 기능
 그리고, 압축후 파일 암호화와 / 복호화 후 압축을 해제하는 암호화 기능을 추가했습니다.

[participant]
저희의 구성원들과 역할입니다.
저는 원본파일 삭제와 용량제한 압축을 구현했습니다.
최봉근 학생은 암호화-복호화 기능 추가와 디렉토리 삭제 기능을 추가했습니다.
지준형 학생은 회의에 같이 참석하여 소스와 정보를 공유했습니다.

[Major code]
저희의 주요 코드입니다.
-encryption
 암호화 코드입니다.
 암호화옵션을 걸어주게되면 압축파일 뒤에 .lock의 확장가 붙게됩니다. 
 (while줄)이 줄을 보시면 file이 끝날때 까지 반복되는 코드입니다.
 이 부분에서 파일을 XOR로 암호화 시켜주게 됩니다.
 암호화가 진행되는 동안 콤마를 찍어 진행중을 보여줍니다.
 파일이 클수록 오래 걸리기 때문에 이용자가 돌아가고 있다는걸 확인할 수 있도록 
 콤마를 표시해 주었습니다.

-decryption
 복호화 알고리즘은 XOR이기 때문에 위의 암호화와 비슷합니다.
 메인에서 옵션을 받아오는 형식이 다른데 
 처음으로 암호화된 파일의 이름을 가져오고 그후에 복호화된 압축파일을 fin에 넣어줍니다.
 그리고 마지막으로 생성할 파일의 이름을 fout에 넣어줍니다.

-remove
 디렉토리가 삭제되는 경우에는 내부의 파일을 모두 지워주어야 하기 때문에 이 기능을 넣었습니다.
 디렉토리의 처음부터 파일 또는 디렉토리명을 순서대로 한개씩 읽습니다.
 내부의 파일을 읽어올 때 현재 디렉토리를 나타내는 .(dot)을 읽어오기 때문에 그런 경우에는
 skip하게 됩니다.  
 디렉토리안에 또 다른 디렉토리가 있는경우도 있기 때문에 내부에 디렉토리가 있는 경우에는
 재귀호출을 하여 모두 검색합니다.
 일반파일 또는 symbolic link이면 unlink로 삭제해 줍니다.

[Execution video]
 1. 기본적인 압축과 압축해제를 먼저 보여드리겠습니다.
 옵션은 c와 d로 주어서 c일 경우 압축 / d일 경우 압축해제합니다.
 2. 원본파일 삭제와 확인 후 삭제할 파일의 크기를 설정하는 경우입니다.
 옵션은 k와 l을 사용했고 k일경우 원본파일을 바로 삭제하고
 l일경우 뒤에 원하는 용량을 적어 그보다 큰 용량을 가지게 되면 원본파일을 삭제합니다.
 3. 옵션 r을 사용할 경우 디렉토리를 압축후에 모두 삭제하는 경우입니다.
 4. 암호화 입니다.
 옵션은 e를 사용했고 압축후 암호화를 한 파일에는 .lock의 확장자가 붙는것을 보실수 있습니다.
 5. 복호화 입니다.
 복호화 할때 쓰는 명령어는 암호화된 파일 그리고 암호화가 풀린gz파일 , 원본파일을 씁니다.
 mv를 이용하여 lock파일의 lock을 지우고 확장자를 gz로 바꿀경우 암호화 되어있기 때문에
 압축을 해제할경우 오류가 나는것을 볼 수 있습니다.

[What needs to be improved]
저희가 프로젝트를 하면서 아쉬웠던 것은
옵션을 사용할때 하나의 속성을 받아 작업했기 때문에 여러 옵션을 붙여 사용할 수 있게 하는
것과 현재 암호화알고리즘이 XOR로 되어있는데 보안성이 더 좋은 AES암호화 알고리즘을 이용하여
암호화 했더라면 더 좋았을것 같습니다.

이상으로 4조의 발표를 마치겠습니다 감사합니다.